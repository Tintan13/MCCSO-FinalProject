<%- include('includes/header') %>

<div class="container mx-auto px-4 py-8 bg-gray-50 min-h-screen">
    <!-- Header Section -->
    <div class="mb-6">
        <h1 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-4">Personnel Management</h1>
        
        <!-- Search and Add New Row -->
        <div class="flex flex-col sm:flex-row justify-between gap-4">
            <div class="w-full sm:w-96">
                <div class="relative">
                    <input type="text" 
                           id="searchInput" 
                           class="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent"
                           placeholder="Search personnel...">
                    <div class="absolute left-3 top-2.5">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                        </svg>
                    </div>
                </div>
            </div>
            <button class="flex items-center justify-center px-4 py-2 bg-green-600 text-white rounded-lg shadow-sm hover:bg-green-700 transition-colors w-full sm:w-auto"
                    data-bs-toggle="modal" 
                    data-bs-target="#addPersonnelModal">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
                Add New Personnel
            </button>
        </div>
    </div>

    <!-- Main Content Card -->
    <div class="bg-white rounded-xl shadow-md overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Personnel ID
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Name
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Department
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Position
                        </th>
                        <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <% personnel.forEach(person => { %>
                        <tr id="personnel-row-<%= person.personnel_id %>" class="hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" data-field="id">
                                <%= person.personnel_id %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" data-field="name">
                                <%= person.personnel_name %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" data-field="department">
                                <%= person.department_name %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" data-field="position">
                                <%= person.position %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <button class="update-btn inline-flex items-center px-3 py-1.5 bg-green-100 text-green-700 rounded-md hover:bg-green-200 mr-2 transition-colors"
                                        data-id="<%= person.personnel_id %>"
                                        data-name="<%= person.personnel_name %>"
                                        data-department="<%= person.department_id %>"
                                        data-position="<%= person.position %>"
                                        data-bs-toggle="modal" 
                                        data-bs-target="#updatePersonnelModal">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                                    </svg>
                                    Update
                                </button>
                                <button class="delete-btn inline-flex items-center px-3 py-1.5 bg-red-100 text-red-700 rounded-md hover:bg-red-200 transition-colors"
                                        data-id="<%= person.personnel_id %>">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                    Delete
                                </button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="bg-gray-50 px-4 py-3 border-t border-gray-200 sm:px-6">
            <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
                <div class="text-sm text-gray-700">
                    Showing <%= ((pagination.page - 1) * 10) + 1 %> to 
                    <%= Math.min(pagination.page * 10, pagination.totalRecords) %> 
                    of <%= pagination.totalRecords %> records
                </div>
                <% if (pagination.totalPages > 1) { %>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px">
                        <a href="?page=<%= pagination.page - 1 %>" 
                           class="<%= !pagination.hasPrev ? 'opacity-50 cursor-not-allowed' : '' %> relative inline-flex items-center px-3 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                            Previous
                        </a>
                        
                        <% for(let i = 1; i <= pagination.totalPages; i++) { %>
                            <a href="?page=<%= i %>" 
                               class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium <%= pagination.page === i ? 'text-green-600 bg-green-50 z-10' : 'text-gray-700 hover:bg-gray-50' %>">
                                <%= i %>
                            </a>
                        <% } %>

                        <a href="?page=<%= pagination.page + 1 %>" 
                           class="<%= !pagination.hasNext ? 'opacity-50 cursor-not-allowed' : '' %> relative inline-flex items-center px-3 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                            Next
                        </a>
                    </nav>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- Add Personnel Modal -->
<div class="modal fade fixed top-0 left-0 hidden w-full h-full outline-none overflow-x-hidden overflow-y-auto bg-gray-900 bg-opacity-50 z-50" 
     id="addPersonnelModal" 
     tabindex="-1" 
     aria-labelledby="addPersonnelModalLabel" 
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered relative w-auto pointer-events-none max-w-lg mx-auto my-8">
        <div class="modal-content border-none shadow-lg relative flex flex-col w-full pointer-events-auto bg-white bg-clip-padding rounded-md outline-none text-current">
            <!-- Modal Header -->
            <div class="modal-header flex flex-shrink-0 items-center justify-between p-4 border-b border-gray-200 rounded-t-md">
                <h5 class="text-xl font-medium leading-normal text-gray-800" id="addPersonnelModalLabel">
                    Add New Personnel
                </h5>
                <button type="button" 
                        class="btn-close box-content w-4 h-4 p-1 text-black border-none rounded-none opacity-50 focus:shadow-none focus:outline-none focus:opacity-100 hover:text-black hover:opacity-75 hover:no-underline"
                        data-bs-dismiss="modal" 
                        aria-label="Close">
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body relative p-4">
                <form id="addPersonnelForm" class="space-y-4">
                    <div class="form-group">
                        <label for="personnel_id" class="block text-sm font-medium text-gray-700 mb-1">
                            Personnel ID
                        </label>
                        <input type="text" 
                               class="form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-green-600 focus:outline-none focus:ring-2 focus:ring-green-500"
                               id="personnel_id" 
                               name="personnel_id" 
                               required>
                    </div>
                
                    <div class="form-group">
                        <label for="personnel_name" class="block text-sm font-medium text-gray-700 mb-1">
                            Personnel Name
                        </label>
                        <input type="text" 
                               class="form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-green-600 focus:outline-none focus:ring-2 focus:ring-green-500"
                               id="personnel_name" 
                               name="personnel_name" 
                               required>
                    </div>
                
                    <div class="form-group">
                        <label for="department_id" class="block text-sm font-medium text-gray-700 mb-1">
                            Department
                        </label>
                        <select class="form-select block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-green-600 focus:outline-none focus:ring-2 focus:ring-green-500"
                                id="department_id" 
                                name="department_id">
                            <option value="">Select Department</option>
                            <% departments.forEach(dept => { %>
                                <option value="<%= dept.department_id %>"><%= dept.department_name %></option>
                            <% }) %>
                        </select>
                    </div>
                
                    <div class="form-group">
                        <label for="position" class="block text-sm font-medium text-gray-700 mb-1">
                            Position
                        </label>
                        <input type="text" 
                               class="form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-green-600 focus:outline-none focus:ring-2 focus:ring-green-500"
                               id="position" 
                               name="position">
                    </div>
                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer flex flex-shrink-0 flex-wrap items-center justify-end p-4 border-t border-gray-200 rounded-b-md">
                <button type="button"
                        class="inline-flex items-center px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors"
                        data-bs-dismiss="modal">
                    Cancel
                </button>
                <button type="button"
                        id="savePersonnelBtn"
                        class="inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors ml-3">
                    Save
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Update Personnel Modal -->
<div class="modal fade fixed top-0 left-0 hidden w-full h-full outline-none overflow-x-hidden overflow-y-auto bg-gray-900 bg-opacity-50 z-50" 
     id="updatePersonnelModal" 
     tabindex="-1" 
     aria-labelledby="updatePersonnelModalLabel" 
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered relative w-auto pointer-events-none max-w-lg mx-auto my-8">
        <div class="modal-content border-none shadow-lg relative flex flex-col w-full pointer-events-auto bg-white bg-clip-padding rounded-md outline-none text-current">
            <!-- Modal Header -->
            <div class="modal-header flex flex-shrink-0 items-center justify-between p-4 border-b border-gray-200 rounded-t-md">
                <h5 class="text-xl font-medium leading-normal text-gray-800" id="updatePersonnelModalLabel">
                    Update Personnel
                </h5>
                <button type="button" 
                        class="btn-close box-content w-4 h-4 p-1 text-black border-none rounded-none opacity-50 focus:shadow-none focus:outline-none focus:opacity-100 hover:text-black hover:opacity-75 hover:no-underline"
                        data-bs-dismiss="modal" 
                        aria-label="Close">
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body relative p-4">
                <form id="updatePersonnelForm" class="space-y-4">
                    <input type="hidden" id="update_personnel_id">
                    
                    <div class="form-group">
                        <label for="update_personnel_name" class="block text-sm font-medium text-gray-700 mb-1">
                            Personnel Name
                        </label>
                        <input type="text" 
                               class="form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
                               id="update_personnel_name" 
                               required>
                    </div>
                    
                    <div class="form-group">
                        <label for="update_department_id" class="block text-sm font-medium text-gray-700 mb-1">
                            Department
                        </label>
                        <select class="form-select block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
                                id="update_department_id" 
                                required>
                            <% departments.forEach(dept => { %>
                                <option value="<%= dept.department_id %>"><%= dept.department_name %></option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="update_position" class="block text-sm font-medium text-gray-700 mb-1">
                            Position
                        </label>
                        <input type="text" 
                               class="form-control block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
                               id="update_position" 
                               required>
                    </div>
                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer flex flex-shrink-0 flex-wrap items-center justify-end p-4 border-t border-gray-200 rounded-b-md">
                <button type="button"
                        class="px-6 py-2.5 bg-gray-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-gray-700 hover:shadow-lg focus:bg-gray-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-gray-800 active:shadow-lg transition duration-150 ease-in-out"
                        data-bs-dismiss="modal">
                    Close
                </button>
                <button type="button"
                        class="px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out ml-1"
                        id="updatePersonnelBtn">
                    Update
                </button>
            </div>
        </div>
    </div>
</div>



<!-- Success Toast Notification -->
<div id="successToast" class="hidden fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 flex items-center">
    <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
    </svg>
    <span class="toast-message"></span>
</div>

<!-- Error Toast Notification -->
<div id="errorToast" class="hidden fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 flex items-center">
    <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
    </svg>
    <span class="toast-message"></span>
</div>



<!-- Delete Confirmation Modal -->
<!-- Delete Confirmation Modal -->
<div id="deleteConfirmModal" 
     class="fixed inset-0 z-50 hidden overflow-y-auto" 
     aria-labelledby="modal-title" 
     role="dialog" 
     aria-modal="true">
    <div class="flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0">
        <!-- Background overlay -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" 
             aria-hidden="true"></div>

        <!-- Modal panel -->
        <div class="inline-block transform overflow-hidden rounded-lg bg-white text-left align-bottom shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:align-middle">
            <div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <!-- Warning icon -->
                    <div class="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                        <svg class="h-6 w-6 text-red-600" 
                             fill="none" 
                             viewBox="0 0 24 24" 
                             stroke-width="1.5" 
                             stroke="currentColor" 
                             aria-hidden="true">
                            <path stroke-linecap="round" 
                                  stroke-linejoin="round" 
                                  d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                        <h3 class="text-lg font-medium leading-6 text-gray-900" 
                            id="modal-title">Confirm Delete</h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-500">
                                Are you sure you want to delete this personnel? This action cannot be undone.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                <button type="button" 
                        id="confirmDeleteBtn"
                        class="inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm">
                    Delete
                </button>
                <button type="button" 
                        class="mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm"
                        data-bs-dismiss="modal">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Loading Spinner -->
<div id="loadingSpinner" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-green-500"></div>
</div>

<script>

    
    // Real-time search  function
    const searchInput = document.querySelector('#searchInput');
    searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const tableRows = document.querySelectorAll('tbody tr');
        let visibleCount = 0;
    
        tableRows.forEach(row => {
            const text = row.textContent.toLowerCase();
            const shouldShow = text.includes(searchTerm);
            row.style.display = shouldShow ? '' : 'none';
            if (shouldShow) visibleCount++;
        });
    
        // Update the records info text when searching
        const recordsInfo = document.querySelector('.text-muted');
        if (recordsInfo) {
            if (searchTerm) {
                recordsInfo.textContent = `Showing ${visibleCount} matching records`;
            } else {
                // Reset to original pagination text
                const start = ((pagination.page - 1) * 10) + 1;
                const end = Math.min(pagination.page * 10, pagination.totalRecords);
                recordsInfo.textContent = `Showing ${start} to ${end} of ${pagination.totalRecords} records`;
            }
        }
    
        // Hide pagination when searching
        const paginationNav = document.querySelector('.pagination');
        if (paginationNav) {
            paginationNav.style.display = searchTerm ? 'none' : '';
        }
    });
    
    
    
    
    document.getElementById('savePersonnelBtn').addEventListener('click', function() {
        const personnelId = document.getElementById('personnel_id').value.trim();
        const personnelName = document.getElementById('personnel_name').value.trim();
        const departmentId = document.getElementById('department_id').value;
        const position = document.getElementById('position').value.trim();
    
        // Debug log
        console.log('Submitting data:', {
            personnel_id: personnelId,
            personnel_name: personnelName,
            department_id: departmentId,
            position: position
        });
    
        if (!personnelId || !personnelName) {
            alert('Personnel ID and Name are required!');
            return;
        }
    
        fetch('/personnel/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                personnel_id: personnelId,
                personnel_name: personnelName,
                department_id: departmentId || null,
                position: position || ''
            }),
        })
        .then(response => response.json())
        .then(data => {
            console.log('Server response:', data);
            
            if (data.success) {
                alert('Personnel added successfully!');
                location.reload();
            } else {
                alert(data.error || 'Failed to add personnel');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while adding personnel. Check console for details.');
        });
    });
    
    
    
    // Update Personnel
    document.addEventListener('DOMContentLoaded', function() {
        // Event delegation for update buttons
        document.body.addEventListener('click', function(e) {
            if (e.target.classList.contains('update-btn')) {
                const id = e.target.getAttribute('data-id');
                const name = e.target.getAttribute('data-name');
                const department = e.target.getAttribute('data-department');
                const position = e.target.getAttribute('data-position');
    
                // Set values in update modal
                document.getElementById('update_personnel_id').value = id;
                document.getElementById('update_personnel_name').value = name;
                document.getElementById('update_department_id').value = department;
                document.getElementById('update_position').value = position;
            }
        });
    
        // Update button click handler
        document.getElementById('updatePersonnelBtn').addEventListener('click', function() {
            const id = document.getElementById('update_personnel_id').value;
            const name = document.getElementById('update_personnel_name').value.trim();
            const department = document.getElementById('update_department_id').value;
            const position = document.getElementById('update_position').value.trim();
    
            if (!name) {
                alert('Personnel Name is required!');
                return;
            }
    
            fetch(`/personnel/update/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    personnel_name: name,
                    department_id: department,
                    position: position
                }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    alert('Personnel updated successfully!');
                    location.reload();
                } else {
                    alert(data.error || 'Failed to update personnel');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating personnel');
            });
        });
    
// Delete button click handler
document.body.addEventListener('click', function(e) {
    if (e.target.classList.contains('delete-btn')) {
        e.preventDefault();
        const id = e.target.getAttribute('data-id');
        
        if (confirm('Are you sure you want to delete this personnel?')) {
            fetch(`/personnel/delete/${id}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    // Use the correct selector to find and remove the row
                    const row = document.querySelector(`#personnel-row-${id}`);
                    if (row) {
                        row.remove();
                        alert('Personnel deleted successfully!');
                    }
                    
                    // Optional: Adjust pagination or reload page if needed
                    // location.reload();
                } else {
                    alert(data.error || 'Failed to delete personnel');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting personnel');
            });
        }
    }
});
    });
    </script>

<%- include('includes/footer') %>
<%- include('includes/scripts') %>