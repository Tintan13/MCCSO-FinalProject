<%- include('includes/header') %>

<div class="w-full px-4 sm:px-6 lg:px-8 py-8">
    <!-- Items Header -->
    <div class="mb-6 flex items-center container mx-auto">
        <h1 class="text-3xl font-bold text-gray-900 mr-4">Items</h1>
    </div>

    <!-- Search and Main Content Container -->
    <div class="container mx-auto">
        <!-- Search Bar -->
        <div class="mb-6">
            <div class="relative">
                <input type="text" 
                       class="w-full pl-4 pr-10 py-2 border-2 border-gray-200 rounded-lg focus:outline-none focus:border-blue-500 transition-colors" 
                       placeholder="Search items..." 
                       aria-label="Search">
                <svg class="absolute right-3 top-2.5 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                </svg>
            </div>
        </div>

        <!-- Main Content Card -->
        <div class="bg-white rounded-lg shadow-sm">
            <div class="p-6">
                <!-- Add Button -->
                <div class="mb-6">
                    <button class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors"
                            onclick="openModal('addItemModal')">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path d="M12 4v16m8-8H4" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                        </svg>
                        Add New Item
                    </button>
                </div>

                <!-- Table -->
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Item Name</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product Number</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Serial Number</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Model</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Brand</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Personnel</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Department</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Request Date</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Condition</th>
                                <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% if (typeof items !== 'undefined' && items.length > 0) { %>
                                <% items.forEach(item => { %>
                                <tr id="item-<%= item.id %>" class="hover:bg-gray-50">
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.category %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.item_name %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.product_number %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.serial_number %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.model %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.brand %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.amount.toFixed(2) %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.personnel %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.department %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900"><%= new Date(item.request_date).toLocaleDateString() %></td>
                                    <td class="px-4 py-4 whitespace-nowrap text-sm">
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                            <%= item.item_condition === 'Working' ? 'bg-green-100 text-green-800' : 
                                                item.item_condition === 'Broken' ? 'bg-red-100 text-red-800' : 
                                                'bg-gray-100 text-gray-800' %>">
                                            <%= item.item_condition %>
                                        </span>
                                    </td>
                                    <td class="px-4 py-4 whitespace-nowrap text-right text-sm space-x-2">
                                        <button class="inline-flex items-center px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors update-btn"
                                                data-id="<%= item.id %>"
                                                onclick="openUpdateModal(this)">
                                            <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                            </svg>
                                            Edit
                                        </button>
                                        <button class="inline-flex items-center px-3 py-1.5 bg-red-600 hover:bg-red-700 text-white rounded-md transition-colors delete-btn"
                                                data-id="<%= item.id %>"
                                                onclick="confirmDeleteItem(this)">
                                            <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                                            </svg>
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                                <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="12" class="px-4 py-4 text-center text-gray-500">
                                            No items found
                                        </td>
                                    </tr>
                                <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Item Modal -->
<div id="addItemModal" class="fixed inset-0 z-50 hidden overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen px-4">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>
        
        <div class="relative bg-white rounded-lg max-w-2xl w-full">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Add New Item</h3>
                <button onclick="closeModal('addItemModal')" class="absolute top-4 right-4 text-gray-400 hover:text-gray-500">
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                    </svg>
                </button>
            </div>
            
            <form id="addItemForm" class="px-6 py-4">
                <div class="grid grid-cols-2 gap-4">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Category</label>
                        <input type="text" name="category" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Item Name</label>
                        <input type="text" name="item_name" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Product Number</label>
                        <input type="text" name="product_number" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Serial Number</label>
                        <input type="text" name="serial_number" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Model</label>
                        <input type="text" name="model" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Brand</label>
                        <input type="text" name="brand" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Amount</label>
                        <input type="number" name="amount" step="0.01" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Personnel</label>
                        <input type="text" name="personnel" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Department</label>
                        <input type="text" name="department" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Request Date</label>
                        <input type="date" name="request_date" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                    </div>
                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Condition</label>
                        <select name="item_condition" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                            <option value="">Select Condition</option>
                            <option value="Working">Working</option>
                            <option value="Broken">Broken</option>
                            <option value="Needs Repair">Needs Repair</option>
                        </select>
                    </div>
                </div>
                
                <div class="flex justify-end gap-3 mt-6">
                    <button type="button" 
                            onclick="closeModal('addItemModal')"
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700">
                        Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


<div id="updateItemModal" class="fixed inset-0 z-50 hidden overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen px-4">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>
        
        <div class="relative bg-white rounded-lg max-w-2xl w-full">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Update Item</h3>
                <button onclick="closeModal('updateItemModal')" class="absolute top-4 right-4 text-gray-400 hover:text-gray-500">
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                    </svg>
                </button>
            </div>
            
            <form id="updateItemForm" class="px-6 py-4">
                <input type="hidden" name="id" id="updateItemId">
                <div class="grid grid-cols-2 gap-4">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Category</label>
                        <input type="text" name="category" id="updateCategory" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Item Name</label>
                        <input type="text" name="item_name" id="updateItemName" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Product Number</label>
                        <input type="text" name="product_number" id="updateProductNumber" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Serial Number</label>
                        <input type="text" name="serial_number" id="updateSerialNumber" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Model</label>
                        <input type="text" name="model" id="updateModel" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Brand</label>
                        <input type="text" name="brand" id="updateBrand" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Amount</label>
                        <input type="number" name="amount" id="updateAmount" step="0.01" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Personnel</label>
                        <input type="text" name="personnel" id="updatePersonnel" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Department</label>
                        <input type="text" name="department" id="updateDepartment" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Request Date</label>
                        <input type="date" name="request_date" id="updateRequestDate" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                    </div>
                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Condition</label>
                        <select name="item_condition" id="updateItemCondition" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
                            <option value="">Select Condition</option>
                            <option value="Working">Working</option>
                            <option value="Broken">Broken</option>
                            <option value="Needs Repair">Needs Repair</option>
                        </select>
                    </div>
                </div>
                
                <div class="flex justify-end gap-3 mt-6">
                    <button type="button" 
                            onclick="closeModal('updateItemModal')"
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700">
                        Update
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


<%- include('includes/footer') %>

// Add this script section to the bottom of your items.ejs file

<script>
const searchInput = document.querySelector('input[aria-label="Search"]');
let searchTimeout;

function openModal(modalId) {
    document.getElementById(modalId).classList.remove('hidden');
}

function closeModal(modalId) {
    document.getElementById(modalId).classList.add('hidden');
}

function handleSearch() {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
        const searchTerm = searchInput.value.trim();
        
        if (searchTerm.length < 2) {
            location.reload();
            return;
        }
        
        fetch(`/items/api/search?term=${encodeURIComponent(searchTerm)}`)
            .then(response => response.json())
            .then(items => {
                const tbody = document.querySelector('tbody');
                tbody.innerHTML = '';
                
                items.forEach(item => {
                    const row = createItemRow(item);
                    tbody.insertAdjacentHTML('beforeend', row);
                });
            })
            .catch(error => {
                console.error('Error searching items:', error);
            });
    }, 300);
}
function openUpdateModal(button) {
    const id = button.getAttribute('data-id');
    fetch(`/items/get/${id}`)
        .then(response => response.json())
        .then(item => {
            // Populate all form fields
            document.getElementById('updateItemId').value = item.id;
            document.getElementById('updateCategory').value = item.category;
            document.getElementById('updateItemName').value = item.item_name;
            document.getElementById('updateProductNumber').value = item.product_number;
            document.getElementById('updateSerialNumber').value = item.serial_number;
            document.getElementById('updateModel').value = item.model;
            document.getElementById('updateBrand').value = item.brand;
            document.getElementById('updateAmount').value = item.amount;
            document.getElementById('updatePersonnel').value = item.personnel;
            document.getElementById('updateDepartment').value = item.department;
            document.getElementById('updateRequestDate').value = item.request_date ? new Date(item.request_date).toISOString().split('T')[0] : '';
            document.getElementById('updateItemCondition').value = item.item_condition;
            
            // Open the modal
            openModal('updateItemModal');
        })
        .catch(error => {
            console.error('Error fetching item details:', error);
            alert('Failed to load item details');
        });
}


function createItemRow(item) {
    return `
        <tr id="item-${item.id}" class="hover:bg-gray-50">
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${item.category}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${item.item_name}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${item.product_number}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${item.serial_number}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${item.model}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${item.brand}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${parseFloat(item.amount).toFixed(2)}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${item.personnel}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${item.department}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-900">${new Date(item.request_date).toLocaleDateString()}</td>
            <td class="px-4 py-4 whitespace-nowrap text-sm">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                    item.item_condition === 'Working' ? 'bg-green-100 text-green-800' : 
                    item.item_condition === 'Broken' ? 'bg-red-100 text-red-800' : 
                    'bg-gray-100 text-gray-800'
                }">
                    ${item.item_condition}
                </span>
            </td>
            <td class="px-4 py-4 whitespace-nowrap text-right text-sm space-x-2">
                <button class="inline-flex items-center px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors update-btn"
                        data-id="${item.id}"
                        onclick="openUpdateModal(this)">
                    <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                    </svg>
                    Edit
                </button>
                <button class="inline-flex items-center px-3 py-1.5 bg-red-600 hover:bg-red-700 text-white rounded-md transition-colors delete-btn"
                        data-id="${item.id}"
                        onclick="confirmDeleteItem(this)">
                    <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
                    </svg>
                    Delete
                </button>
            </td>
        </tr>
    `;
}

// Event Listeners
searchInput.addEventListener('input', handleSearch);
// In your items.ejs file, update the form submission code
document.getElementById('addItemForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const formData = new FormData(this);
    const data = Object.fromEntries(formData.entries());
    
    fetch('/items/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        // Log the entire response for debugging
        console.log('Response status:', response.status);
        console.log('Response headers:', response.headers);
        
        // Try to parse response text for more details
        return response.text().then(text => {
            try {
                return JSON.parse(text);
            } catch (error) {
                throw new Error(`Failed to parse JSON: ${text}`);
            }
        });
    })
    .then(result => {
        if (result.success) {
            closeModal('addItemModal');
            location.reload();
        } else {
            alert(result.message || 'Error adding item');
        }
    })
    .catch(error => {
        console.error('Full Error Details:', error);
        alert(`Error: ${error.message}`);
    });
});

// Apply similar error handling to update and delete methods

function confirmDeleteItem(button) {
    if (confirm('Are you sure you want to delete this item?')) {
        const id = button.getAttribute('data-id');
        deleteItem(id);
    }
}

function deleteItem(id) {
    fetch(`/items/delete/${id}`, {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json',
        }
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(errorData => {
                throw new Error(errorData.message || 'An error occurred');
            });
        }
        return response.json();
    })
    .then(result => {
        if (result.success) {
            document.getElementById(`item-${id}`).remove();
            // Optional: Add a toast or notification
        } else {
            alert('Error deleting item: ' + result.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while deleting the item');
    });
}

document.getElementById('updateItemForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const formData = new FormData(this);
    const data = Object.fromEntries(formData.entries());
    
    fetch(`/items/update/${data.id}`, {  // Ensure ID is correctly passed
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(errorData => {
                throw new Error(errorData.message || 'An error occurred');
            });
        }
        return response.json();
    })
    .then(result => {
        if (result.success) {
            closeModal('updateItemModal');
            location.reload();
        } else {
            alert(result.message || 'Error updating item');
        }
    })
    .catch(error => {
        console.error('Fetch Error:', error);
        alert(error.message || 'An unexpected error occurred');
    });
});



</script>